<?php
// $Id: gv_blocks.module

module_load_include('inc', 'gv_blocks', 'inc/constants');

/**
 * Implements hook_block_info().
 */
function gv_blocks_block_info() {
  $blocks['main_menu_om_news'] = array(
    'info' => t('OM News'), 
    'cache' => DRUPAL_NO_CACHE, // DRUPAL_CACHE_GLOBAL
  );
  $blocks['main_menu_om_providers'] = array(
    'info' => t('OM Providers'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_blog'] = array(
    'info' => t('OM Blog'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_aboutus'] = array(
    'info' => t('OM About Us'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['main_menu_om_allaboutvoip'] = array(
    'info' => t('OM All About VoIP'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_editor'] = array(
    'info' => t('OM Editor'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['footer_menu'] = array(
    'info' => t('Footer menu'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['followus_links'] = array(
    'info' => t('Follow us links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['request_quote'] = array(
    'info' => t('Request a quote'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['news_topics'] = array(
    'info' => t('News topics'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function gv_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {      
    case 'main_menu_om_news':
      $block['subject'] = t('OM News');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('News', 'gv_blocks_get_omMenuBlock_News');
      break;
    case 'main_menu_om_providers':
      $block['subject'] = t('OM Providers');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('VoIP Providers', 'gv_blocks_get_omMenuBlock_Providers');
      break;
    case 'main_menu_om_blog':
      $block['subject'] = t('OM Blog');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('VoIP Blog', 'gv_blocks_get_omMenuBlock_Blog');
      break;
    case 'main_menu_om_aboutus':
      $block['subject'] = t('OM About Us');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('About Us', 'gv_blocks_get_omMenuBlock_AboutUs');
      break;
    case 'main_menu_om_allaboutvoip':
      $block['subject'] = t('OM All About VoIP');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('All About VoIP', 'gv_blocks_get_omMenuBlock_AllAboutVoIP');
      break;
    case 'main_menu_om_editor':
      $block['subject'] = t('OM Editor');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('Editor', 'gv_blocks_get_omMenuBlock_Editor');
      break;     
    case 'footer_menu':
      $block['subject'] = t('Footer menu');
      $block['content'] = gv_blocks_get_footerMenu();
      break; 
    case 'followus_links':
      $block['subject'] = t('Follow us links');
      $block['content'] = gv_blocks_get_followUsLinks();
      break; 
    case 'request_quote':
      $block['subject'] = t('Request a quote');
      $block['content'] = gv_blocks_get_requestQuote();
      break; 
    case 'news_topics':
      $block['subject'] = t('News topics');
      $block['content'] = gv_blocks_get_newsTopics();
      break;
  }
  return $block;
}


/**
 * Returns a themed News topics block. 
 * 
 * Allows to use same topics for News, Articles, Blog posts, etc.
 */
function gv_blocks_get_newsTopics() {
  global $language;
  $topics = cache_get('news_topics_block' . $language->language);
  if (!$topics || empty($topics->data) || $topics->expire < time()) {
    $topics = gv_misc_getTopics('news_post', 'news', 2);
    $topics = theme('gv_blocks_submenuSimple', array('submenu' => array('below' => $topics), 'class' => 'topics'));
    $topics .= '<div class="more-link">' . l(t('More'), 'news-topics'). '</div>';
    // Expire = current time + 4 hours.
    cache_set('news_topics_block' . $language->language, $topics, 'cache', time() + 14400);
  }
  else {
    $topics = $topics->data;
  }
  return $topics; 
}


/**
 * Returns a themed Follow Us links block.
 */
function gv_blocks_get_followUsLinks() {
  $menu = menu_build_tree('menu-follow-us-links');
  return '<span class="menu-preface">Follow Us:</span>' . theme('gv_blocks_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu'));
}


/**
 * Returns a themed Footer menu.
 */
function gv_blocks_get_footerMenu() {
  $menu = menu_build_tree('menu-footer-menu');
  return '<span class="menu-preface">(c) GetVoIP.com</span>' . theme('gv_blocks_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu', 'delimiter' => '<li> | </li>'));
}


/**
 * Dispatcher for getting themed block for MegaMenu by a block title.
 */
function gv_blocks_get_omMenuBlock_byTitle($title, $function) {

  // global $language;
  // $types = cache_get('types_' . $language->language);
  // Expire = current time + 2 hours.
  // cache_set('types_' . $language->language, $types, 'cache', time() + 7200);
  
  // Get main menu wireframe menu.
  $submenu = gv_blocks_getSubmenuByTitle('main-menu', $title);
  return '<div class="om-btitle">' . $title . '</div>' . $function($submenu);
}

/**
 * Returns a content of a block wrapped in proper divs.
 */
function gv_blocks_wrapInBlockThemed($block_data, $block)
{
  if(!$block['content']) {
      return null;
  }
  $block['content'] = render($block);
  //return '<div id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block block-' . $block_data['module'] . '">' . ($block['subject'] ? '<h2 class="block-title">' . $block['subject'] . '</h2>':'') . '<div class="content">' . $block['content'] . '</div></div>';
  return '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block block-' . $block_data['module'] . '">' . ($block['subject'] ? '<h2 class="block-title">' . $block['subject'] . '</h2>':'') . '<div class="content">' . $block['content'] . '</div></section>';
}


/**
 * Returns a themed News block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_News($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a themed VoIP Providers block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Providers($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a themed VoIP Blog block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Blog($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a themed VoIP Blog block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_AboutUs($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a themed All About VoIP block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_AllAboutVoIP($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a themed Editor block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Editor($submenu) {
  return theme('gv_blocks_submenuSimple', array('submenu' => $submenu));
}


/**
 * Returns a submenu from a menu.
 */
function gv_blocks_getSubmenuByTitle($menu_name, $submenu_title) {
  $menu = menu_build_tree($menu_name);
  foreach ($menu as $submenu) {
    if ($submenu['link']['link_title'] == $submenu_title) {
      return $submenu;
    }
  }
  return NULL;
}


/**
 * Implements hook_theme().
 */
function gv_blocks_theme($existing, $type, $theme, $path) {
  return array(
     'gv_blocks_submenuSimple' => array(
          'variables' => array('vars' => null),
          //'template' => 'gv_blocks_home',
        ),
  );
}


/**
 * Simple theming of nested submenu.
 */
function theme_gv_blocks_submenuSimple($vars) {
  $level = isset($vars['level']) ? $vars['level'] : 0;
  $class = isset($vars['class']) ? $vars['class'] : 'om-links';
  $delimiter = isset($vars['delimiter']) ? $vars['delimiter'] : '';
  $out = '<ul class="' . $class . ' lvl-' . $level . '">';
  $count = 0;
  foreach ($vars['submenu']['below'] as $submenu) {
    if (isset($submenu['link']['hidden']) && $submenu['link']['hidden']) {
      continue;
    }
    $out .= ($count ? $delimiter : '') . '<li>';
    if($level) {
      for ($i = 0; $i < $level; $i++ ) {
        $out .= '--';
      }
    }
    $title = t($submenu['link']['link_title']);
    if(isset($submenu['count']) && $submenu['count']) {
      $title .= ' (' . $submenu['count'] . ')';
    }
    // If the field Description has '<nolink>' don't show link for this item
    if(isset($submenu['link']['localized_options']['attributes']['title']) && strtolower($submenu['link']['localized_options']['attributes']['title']) == '<nolink>') {
      $out .= $title;
    }
    else {
      $out .= l($title, $submenu['link']['href']);
    }
    $out .= '</li>';
    if (!empty($submenu['below'])) {
      // Recursion call.
      $out .= theme('gv_blocks_submenuSimple', array('submenu' => $submenu, 'level' => ($level + 1), 'class' => $class, 'delimiter' => $delimiter ));
    }
    $count++;
  }
  $out .= '</ul>';
  return $out;
}