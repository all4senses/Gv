<?php

/**
 * @file
 * Module for building and managing site's blocks.
 */


module_load_include('inc', 'gv_blocks', 'inc/constants');


/**
 * Implements hook_block_info().
 */
function gv_blocks_block_info() {
  $blocks['main_menu_om_news'] = array(
    'info' => t('OM News'), 
    'cache' => DRUPAL_NO_CACHE, // DRUPAL_CACHE_GLOBAL
  );
  $blocks['main_menu_om_providers'] = array(
    'info' => t('OM Providers'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_blog'] = array(
    'info' => t('OM Blog'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_aboutus'] = array(
    'info' => t('OM About Us'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['main_menu_om_allaboutvoip'] = array(
    'info' => t('OM All About VoIP'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['main_menu_om_editor'] = array(
    'info' => t('OM Editor'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['main_menu_om_user'] = array(
    'info' => t('OM User'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  $blocks['footer_menu'] = array(
    'info' => t('Footer menu'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['followus_links'] = array(
    'info' => t('Follow us links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['request_quote'] = array(
    'info' => t('Request a quote'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  // Topics block for different content types.
  $content_types = array('blog_post' => 'blog', 'news_post' => 'news', 'article' => 'articles');
  foreach ($content_types as $content_type => $label) {
    
    $blocks[$content_type . '_topics'] = array(
      'info' => t(drupal_ucfirst($label) . ' topics'),
      'cache' => DRUPAL_NO_CACHE,
    );
  }
  
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function gv_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {      
    case 'main_menu_om_news':
      $block['subject'] = t('OM News');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('News', 'gv_blocks_get_omMenuBlock_News');
      break;
    case 'main_menu_om_providers':
      $block['subject'] = t('OM Providers');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('VoIP Providers', 'gv_blocks_get_omMenuBlock_Providers');
      break;
    case 'main_menu_om_blog':
      $block['subject'] = t('OM Blog');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('VoIP Blog', 'gv_blocks_get_omMenuBlock_Blog');
      break;
    case 'main_menu_om_aboutus':
      $block['subject'] = t('OM About Us');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('About Us', 'gv_blocks_get_omMenuBlock_AboutUs');
      break;
    case 'main_menu_om_allaboutvoip':
      $block['subject'] = t('OM All About VoIP');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('All About VoIP', 'gv_blocks_get_omMenuBlock_AllAboutVoIP');
      break;
    case 'main_menu_om_editor':
      $block['subject'] = t('OM Editor');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('Editor', 'gv_blocks_get_omMenuBlock_Editor');
      break;     
    case 'main_menu_om_user':
      $block['subject'] = t('OM User');
      $block['content'] = gv_blocks_get_omMenuBlock_byTitle('User', 'gv_blocks_get_omMenuBlock_User');
      break; 
    
    case 'footer_menu':
      $block['subject'] = t('Footer menu');
      $block['content'] = gv_blocks_get_footerMenu();
      break; 
    case 'followus_links':
      $block['subject'] = t('Follow us links');
      $block['content'] = gv_blocks_get_followUsLinks();
      break; 
    case 'request_quote':
      $block['subject'] = t('Request a quote');
      $block['content'] = gv_blocks_get_requestQuote();
      break; 

    default:
      // Get blocks for topics for a specific content type.
      if (strpos($delta, '_topics')) {
        $content_types = array('blog_post' => 'blog', 'news_post' => 'news', 'article' => 'articles');
        $content_type = str_replace('_topics', '', $delta);
        if(!isset($content_types[$content_type])) {
          continue;
        }
        $block['subject'] = t(drupal_ucfirst($content_types[$content_type]) . ' topics');
        $block['content'] = gv_blocks_get_topicsBlock($content_type);
      }
      break;
  }

  return $block;
}


/**
 * Returns a themed topics block for a specific content type.
 * 
 * Allows to use same topics for News, Articles, Blog posts, etc.
 */
function gv_blocks_get_topicsBlock($content_type) {
  
  global $language;
  $topics = NULL;
  $topics = cache_get($content_type . '_topics_block' . $language->language);
  if (!$topics || empty($topics->data) || $topics->expire < time()) {
    // Key = url_argument, used in building the url, 
    // for example,
    // topics/news for topics list for news 
    // OR blog/provider for show all blog posts tagged with 'provider' topic.
    $content_types = array('blog_post' => 'blog', 'news_post' => 'news', 'article' => 'articles');
    $url_argument = $content_types[$content_type];
    $topics = gv_misc_getTopics($content_type, $url_argument . '/topic', 2);
    if(!$topics) {
      return NULL;
    }
    $topics = theme('gv_misc_submenuSimple', array('submenu' => array('below' => $topics), 'class' => 'topics'));
    $topics .= '<div class="more-link">' . l(t('More'), 'topics/' . $url_argument) . '</div>';
    // Expire = current time + 4 hours.
    cache_set($content_type . '_topics_block' . $language->language, $topics, 'cache', time() + 14400);
  }
  else {
    $topics = $topics->data;
  }
  return $topics; 
}


/**
 * Returns a themed News topics block. 
 * 
 * Allows to use same topics for News, Articles, Blog posts, etc.
 */
/*
function gv_blocks_get_newsTopics() {
  global $language;
  $topics = cache_get('news_topics_block' . $language->language);
  if (!$topics || empty($topics->data) || $topics->expire < time()) {
    $topics = gv_misc_getTopics('news_post', 'news', 2);
    $topics = theme('gv_misc_submenuSimple', array('submenu' => array('below' => $topics), 'class' => 'topics'));
    $topics .= '<div class="more-link">' . l(t('More'), 'news-topics'). '</div>';
    // Expire = current time + 4 hours.
    cache_set('news_topics_block' . $language->language, $topics, 'cache', time() + 14400);
  }
  else {
    $topics = $topics->data;
  }
  return $topics; 
}
*/


/**
 * Returns a themed Follow Us links block.
 */
function gv_blocks_get_followUsLinks() {
  $menu = menu_build_tree('menu-follow-us-links');
  return '<span class="menu-preface">Follow Us:</span>' . theme('gv_misc_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu'));
}


/**
 * Returns a themed Footer menu.
 */
function gv_blocks_get_footerMenu() {
  $menu = menu_build_tree('menu-footer-menu');
  return '<span class="menu-preface">(c) GetVoIP.com</span>' . theme('gv_misc_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu', 'delimiter' => '<li> | </li>'));
}


/**
 * Dispatcher for getting themed block for MegaMenu by a block title.
 */
function gv_blocks_get_omMenuBlock_byTitle($title, $function) {

  // global $language;
  // $types = cache_get('types_' . $language->language);
  // Expire = current time + 2 hours.
  // cache_set('types_' . $language->language, $types, 'cache', time() + 7200);
  
  // Get main menu wireframe menu.
  $submenu = gv_blocks_getSubmenuByTitle('main-menu', $title);
  return '<div class="om-btitle">' . $title . '</div>' . $function($submenu);
}


/**
 * Returns a themed News block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_News($submenu) {
  $block_data = array('module' => 'gv_blocks', 'delta' => 'news_post_topics', 'subject_visible' => FALSE);
  $out = gv_blocks_getBlockThemed($block_data);
  return $out;  
  //return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed VoIP Providers block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Providers($submenu) {
  return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed VoIP Blog block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Blog($submenu) {
  $block_data = array('module' => 'gv_blocks', 'delta' => 'blog_post_topics', 'subject_visible' => FALSE);
  $out = gv_blocks_getBlockThemed($block_data);
  return $out;  
  //return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed VoIP Blog block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_AboutUs($submenu) {
  return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed All About VoIP block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_AllAboutVoIP($submenu) {
  $block_data = array('module' => 'gv_blocks', 'delta' => 'article_topics', 'subject_visible' => FALSE);
  $out = gv_blocks_getBlockThemed($block_data);
  return $out;   
  //return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed Editor block content for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_Editor($submenu) {
  return theme('gv_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a themed custiom User block content (which contains several blocks and contents) for MegaMenu.
 */
function gv_blocks_get_omMenuBlock_User($submenu) {
  
  $out = NULL;
  // Build block for User login/logout.
  global $user;
  if($user->uid) {
    $out .= '<div class="title">' . t('You are logged in as ') . '<b>' . $user->name . '</b></div>';
    
    $block_data = array('module' => 'system', 'delta' => 'user-menu', 'subject_visible' => FALSE);
    $out .= gv_blocks_getBlockThemed($block_data);
  }
  else {
    $block_data = array('module' => 'user', 'delta' => 'login');
    $out .= gv_blocks_getBlockThemed($block_data);
  }
  return $out; 
}


/**
 * Returns a submenu from a menu.
 */
function gv_blocks_getSubmenuByTitle($menu_name, $submenu_title) {
  $menu = menu_build_tree($menu_name);
  if(!$menu) {
    return NULL;
  }
  foreach ($menu as $submenu) {
    if ($submenu['link']['link_title'] == $submenu_title) {
      return $submenu;
    }
  }
  return NULL;
}


/**
 * Wrap a block content in proper block's divs.
 */
function gv_blocks_wrapInBlockThemed($block_data, $block)
{
  if(!isset($block['content']) || !$block['content']) {
      return null;
  }
  if (is_array($block['content'])) {
    $block['content'] = render($block);
  }
  return '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block gv block-' . $block_data['module'] . '">' . ( ($block['subject'] && (!isset($block_data['subject_visible']) || $block_data['subject_visible']) )? '<h2 class="block-title">' . $block['subject'] . '</h2>':'') . '<div class="content">' . $block['content'] . '</div></section>';
}


/**
 * Returns a content of a block wrapped in proper divs.
 */
function gv_blocks_getBlockThemed($block_data)
{
  $block = module_invoke($block_data['module'], 'block_view', $block_data['delta']);
  if ($block) {
    return gv_blocks_wrapInBlockThemed($block_data, $block);
  }
  return NULL;
}


/**
 * Block Request a quote with a multistep form.
 */
function gv_blocks_get_requestQuote() {

  drupal_add_library('system', 'ui.widget');
  
  $path_to_custom_js = drupal_get_path('module', 'gv_blocks') . '/js/';
  drupal_add_js($path_to_custom_js . 'gv_requestquote.js');
  $path_to_custom_js = 'sites/all/modules/_JS/multipart_form/';
  drupal_add_js($path_to_custom_js . 'jquery.form.js');
  drupal_add_js($path_to_custom_js . 'jquery.validate.js');
  drupal_add_js($path_to_custom_js . 'bbq.js');
  // drupal_add_js($path_to_custom_js . 'jquery.form.wizard.js');
  drupal_add_js($path_to_custom_js . 'jquery.form.wizard-min.js');
  
  
// <script type="text/javascript" src="../js/jquery-1.4.2.min.js"></script>		
// <script type="text/javascript" src="../js/jquery-ui-1.8.5.custom.min.js"></script>
  
  
  
  $out = '
   <div id="requestQuoteFormWrapper">
        <h3>Request a Quote</h3>
        <ul>
            <li>Five steps.</li>
        </ul>

        <h5 id="status"></h5>
        <form class="multipartForm" method="post" action="/request" class="bbq">

                <div id="fieldWrapper">
                    
                    <div class="step" id="phones_amt">
                        
                            <div class="question">How many phones do you have?</div>
                            
                            <input type="radio" name="phones_amt" value="1 - 2" /><div class="label_after">1 - 2</div>
                            <input type="radio" name="phones_amt" value="3 - 5" /><div class="label_after">3 - 5</div>
                            <input type="radio" name="phones_amt" value="6 - 10" /><div class="label_after">6 - 10</div>
                            <input type="radio" name="phones_amt" value="11 - 20" /><div class="label_after">11 - 20</div>
                            <input type="radio" name="phones_amt" value="21 - 50" /><div class="label_after">21 - 50</div>
                            <input type="radio" name="phones_amt" value="50+" /><div class="last_radio label_after">50+</div>
                            
                    </div>
                    
                    <div class="step" id="q_for">
                        
                            <div class="question">You are looking for a quote for...</div>
                            
                            <input type="radio" name="q_for" value="Home" /><div class="label_after">Home</div>
                            <input type="radio" name="q_for" value="Home-based Business" /><div class="label_after">Home-based Business</div>
                            <input type="radio" name="q_for" value="Business" /><div class="last_radio label_after">Business</div>
                         
                    </div>
                    

                    <div class="step" id="buying_time">
                        
                            <div class="question">What is your buying time frame?</div>
                            
                            <input type="radio" name="buying_time" value="ASAP" /><div class="label_after">ASAP</div>
                            <input type="radio" name="buying_time" value="Less Than 1 Month" /><div class="label_after">Less Than 1 Month</div>
                            <input type="radio" name="buying_time" value="1 - 3 Months" /><div class="label_after">1 - 3 Months</div>
                            <input type="radio" name="buying_time" value="3 - 6 Months" /><div class="label_after">3 - 6 Months</div>
                            <input type="radio" name="buying_time" value="More Than 6 Months" /><div class="last_radio label_after">More Than 6 Months</div>
                         
                    </div>
                    

                    <div class="step" id="connection">
                        
                            <div class="question">What is your data connection?</div>
                            
                            <input type="radio" name="connection" value="DSL" /><div class="label_after">DSL</div>
                            <input type="radio" name="connection" value="Cable" /><div class="label_after">Cable</div>
                            <input type="radio" name="connection" value="T1" /><div class="label_after">T1</div>
                            <input type="radio" name="connection" value="Fiber" /><div class="label_after">Fiber</div>
                            <input type="radio" name="connection" value="Other" /><div class="label_after">Other</div>
                            <input type="radio" name="connection" value="Need New Connection" /><div class="last_radio label_after">Need New Connection</div>
                         
                    </div>
                    
                    
                    <div class="step" id="personal_info">
                        
                            <div class="question">Fill out the form below:</div>
                            
                            <div class="label_before">First Name*</div>
                                <input class="after required name" name="firstname" id="firstname" />
                            <div class="label_before">Last Name*</div>
                                <input class="after required" name="lastname" id="lastname" />
                                
                            <div class="label_before">Company*</div>
                                <input class="after required" name="company" id="company" />
                                
                            <div class="label_before">Email*</div>
                                <input class="after email required" name="email" id="email" />
                                
                            <div class="label_before">Phone*</div>
                                <input class="after required phone" name="phone_1" id="phone_1" value="" />
                                <input class="after required phone" name="phone_2" id="phone_2" value="" />
                                <input class="after required phone" name="phone_3" id="phone_3" value="" />
                                
                            <div class="label_before">Notes</div>
                                <input class="after" name="notes" id="notes" />
                         
                    </div>
                    
                </div>
            
                <div id="Navigation"> 							
                        <input class="navigation_button" id="back" value="Back" type="reset" />
                        <input class="navigation_button" id="next" value="Next" type="submit" />
                </div>
        </form>

        <p id="data"></p>
</div>
  
  ';
  return $out;
}